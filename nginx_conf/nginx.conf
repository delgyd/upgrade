#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    #设置upstream.conf
    include online.conf;
    include upgrade.conf;

    gzip  on;
    lua_package_path "/usr/share/lua/5.1/?.lua;/data/webapp/openresty/lualib/resty/?.lua;/data/webapp/openresty/nginx/conf/lua_conf/?.lua;/data/webapp/openresty/nginx/conf/lua_conf/github/?.lua;;";
    lua_package_cpath "/data/webapp/openresty/lualib/redis/?.so;;";
    server {
        listen       18080;
        server_name  localhost;
        #charset koi8-r;
        #access_log  logs/host.access.log  main;

        set $redis_host '192.168.1.2';
        set $redis_port '6379';
        set $redis_pwd 'qwert';
        set $redis_connect_timeout 10000;
        set $redis_keepalive_timeout 50000;
        set $redis_dbid 0;
        set $redis_pool_size 1000;
        set $server  "test";

        #lua_code_cache on;
        location / {
            #lua脚本入口
            access_by_lua_file /data/webapp/openresty/nginx/conf/lua_conf/github/upindex.lua;
            proxy_pass http://online;
            root   html;
            index  index.html index.htm;
        }
        location @proxyB {
                #access_by_lua_file /data/webapp/openresty/nginx/conf/lua_conf/proxyB.lua;
                proxy_pass http://upgrade;
                root html;
                index index.html;
        }


        #开发测试使用的location
        #location /online {
        #        proxy_pass http://online;
        #}
        #location /upgrade {
        #        proxy_pass http://upgrade;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}